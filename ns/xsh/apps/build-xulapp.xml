<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © 2011-2018 by Renaud Guillard (dev@nore.fr) -->
<!-- Distributed under the terms of the MIT License, see LICENSE -->
<prg:program xmlns:prg="http://xsd.nore.fr/program" xmlns:xi="http://www.w3.org/2001/XInclude" version="2.0">
	<prg:name>build-xulapp</prg:name>
	<prg:author>Renaud Guillard</prg:author>
	<prg:version>2.0</prg:version>
	<prg:copyright>Copyright © 2011-2018 by Renaud Guillard (dev@nore.fr)</prg:copyright>
	<prg:license>Distributed under the terms of the MIT License, see LICENSE</prg:license>
	<prg:documentation>
		<prg:abstract>Build (or update) a XUL application launcher</prg:abstract>
	</prg:documentation>
	<prg:ui>
		<prg:label>XUL front-end builder</prg:label>
	</prg:ui>
	
	<prg:subcommands>
	
		<prg:subcommand>
			<prg:name>python</prg:name>
			<prg:documentation>
				<prg:abstract>Build a Command line interface Python script and its XUL application</prg:abstract>
			</prg:documentation>
			<prg:options>
				<prg:argument>
					<prg:databinding>
						<prg:variable>scriptPath</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Script to build</prg:abstract>
					</prg:documentation>
					<prg:names>
						<prg:long>script</prg:long>
						<prg:short>s</prg:short>
					</prg:names>
					<prg:type>
						<prg:path exist="true" access="r">
							<prg:kinds>
								<prg:file />
							</prg:kinds>
							<prg:patterns>
								<prg:pattern>
									<prg:name>Python script</prg:name>
									<prg:rules>
										<prg:rule>
											<prg:endWith>.py</prg:endWith>
										</prg:rule>
									</prg:rules>
								</prg:pattern>
							</prg:patterns>
						</prg:path>
					</prg:type>
				</prg:argument>
				<xi:include href="./build-python.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//*[@id = 'python.programclassname'])" />
			</prg:options>
		</prg:subcommand>
	
		<prg:subcommand>
			<prg:name>php</prg:name>
			<prg:documentation>
				<prg:abstract>Build a Command line interface PHP script and its XUL application</prg:abstract>
			</prg:documentation>
			<prg:options>
				<prg:argument>
					<prg:databinding>
						<prg:variable>scriptPath</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Script to build</prg:abstract>
					</prg:documentation>
					<prg:names>
						<prg:long>script</prg:long>
						<prg:short>s</prg:short>
					</prg:names>
					<prg:type>
						<prg:path exist="true" access="r">
							<prg:kinds>
								<prg:file />
							</prg:kinds>
							<prg:patterns>
								<prg:pattern>
									<prg:name>PHP script</prg:name>
									<prg:rules>
										<prg:rule>
											<prg:endWith>.php</prg:endWith>
										</prg:rule>
									</prg:rules>
								</prg:pattern>
							</prg:patterns>
						</prg:path>
					</prg:type>
				</prg:argument>
				<xi:include href="./build-php.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//*[@id = 'build-php.option.parserNamespace'])" />
				<xi:include href="./build-php.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//*[@id = 'build-php.option.programNamespace'])" />
				<xi:include href="./build-php.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//*[@id = 'build-php.option.programClassname'])" />
				<!-- <prg:argument>
					<prg:databinding>
					<prg:variable>xulContextDefine</prg:variable>
					</prg:databinding>
					<prg:documentation>
					<prg:abstract>Define constant name</prg:abstract>
					<prg:details>Add a define directive to tell the PHP script it was called from the XUL application</prg:details>
					</prg:documentation>
					</prg:argument> -->
			</prg:options>
		</prg:subcommand>
		
		<prg:subcommand>
			<prg:name>xsh</prg:name>
			<prg:aliases>
				<prg:alias>sh</prg:alias>
				<prg:alias>shell</prg:alias>
			</prg:aliases>
			<prg:documentation>
				<prg:abstract>Build a XUL application which will run a Shell script defined through the bash XML schema</prg:abstract>
			</prg:documentation>
			<prg:options>
				<xi:include href="./build-shellscript.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//prg:argument[@id = 'xmlShellFileDescriptionPath'])" />
				<xi:include href="./build-shellscript.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//prg:switch[@id = 'prefixSubcommandBoundVariableName'])" />
				<xi:include href="./build-shellscript.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//prg:group[@id = 'defaultInterpreter'])" />
			</prg:options>
		</prg:subcommand>
		
		<prg:subcommand>
			<prg:name>command</prg:name>
			<prg:aliases>
				<prg:alias>cmd</prg:alias>
			</prg:aliases>
			<prg:documentation>
				<prg:abstract>Build a XUL application which will run an existing command</prg:abstract>
			</prg:documentation>
			<prg:options>
				<prg:argument id="existingCommandPath" required="true">
					<prg:databinding>
						<prg:variable>existingCommandPath</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Launch the given existing command</prg:abstract>
					</prg:documentation>
					<prg:names>
						<prg:long>command</prg:long>
						<prg:long>cmd</prg:long>
						<prg:short>c</prg:short>
					</prg:names>
				</prg:argument>
			</prg:options>
		</prg:subcommand>
	</prg:subcommands>
	<prg:options>
		<!-- Help -->
		<xi:include href="../lib/options/options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'prg.option.displayHelp'])" />
		<prg:argument id="outputfolder" required="true">
			<prg:databinding>
				<prg:variable>outputPath</prg:variable>
			</prg:databinding>
			<prg:documentation>
				<prg:abstract>Output folder path for the XUL application structure</prg:abstract>
			</prg:documentation>
			<prg:names>
				<prg:short>o</prg:short>
				<prg:long>output</prg:long>
			</prg:names>
			<prg:type>
				<prg:path exist="true">
					<prg:kinds>
						<prg:folder />
					</prg:kinds>
				</prg:path>
			</prg:type>
		</prg:argument>
		<prg:argument id="xmlProgramDescriptionPath">
			<!-- In build-xulapp, the documentation changes a bit -->
			<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//prg:argument[@id = 'nsxml.option.xmlProgramDescriptionPath']/prg:databinding)" />
			<prg:documentation>
				<prg:abstract>Program interface definition file</prg:abstract>
				<prg:details>Location of the XML program description file. Expect a valid XML file following the http://xsd.nore.fr/program schema</prg:details>
			</prg:documentation>
			<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//prg:argument[@id = 'nsxml.option.xmlProgramDescriptionPath']/prg:names)" />
			<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program)xpointer(//prg:argument[@id = 'nsxml.option.xmlProgramDescriptionPath']/prg:type)" />
		</prg:argument>
		<prg:argument>
			<prg:databinding>
				<prg:variable>targetPlatform</prg:variable>
			</prg:databinding>
			<prg:documentation>
				<prg:abstract>Target platform</prg:abstract>
			</prg:documentation>
			<prg:names>
				<prg:long>target-platform</prg:long>
				<prg:long>target</prg:long>
				<prg:short>t</prg:short>
			</prg:names>
			<prg:select restrict="true">
				<prg:option>host</prg:option>
				<prg:option>linux</prg:option>
				<prg:option>osx</prg:option>
			</prg:select>
			<prg:default>host</prg:default>
		</prg:argument>
		<prg:switch>
			<prg:databinding>
				<prg:variable>update</prg:variable>
			</prg:databinding>
			<prg:names>
				<prg:short>u</prg:short>
				<prg:long>update</prg:long>
			</prg:names>
			<prg:documentation>
				<prg:abstract>Update application if folder already exists</prg:abstract>
			</prg:documentation>
		</prg:switch>
		<!-- Skip validation -->
		<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'nsxml.option.skipValidation'])" />
		<prg:group>
			<prg:documentation>
				<prg:abstract>User interface</prg:abstract>
			</prg:documentation>
			<prg:options>
				<prg:argument>
					<prg:databinding>
						<prg:variable>windowWidth</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Window width</prg:abstract>
						<prg:details>Force the application main window witdh</prg:details>
					</prg:documentation>
					<prg:names>
						<prg:long>window-width</prg:long>
						<prg:short>W</prg:short>
					</prg:names>
					<prg:type>
						<prg:number min="50" max="2048" />
					</prg:type>
					<!-- This default value have to match the one in the XSLT stylesheet and build-xulapp-->
					<prg:default>1024</prg:default>
				</prg:argument>
				<prg:argument>
					<prg:databinding>
						<prg:variable>windowHeight</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Window height</prg:abstract>
						<prg:details>Force the application main window height</prg:details>
					</prg:documentation>
					<prg:names>
						<prg:long>window-height</prg:long>
						<prg:short>H</prg:short>
					</prg:names>
					<prg:type>
						<prg:number min="50" max="2048" />
					</prg:type>
					<!-- This default value have to match the one in the XSLT stylesheet and build-xulapp-->
					<prg:default>768</prg:default>
				</prg:argument>
				<!-- debugMode -->
				<prg:switch>
					<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'nsxml.option.debugMode']/prg:databinding)" />
					<prg:documentation>
						<prg:abstract>Add debug console and options into the built interface</prg:abstract>
					</prg:documentation>
					<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'nsxml.option.debugMode']/prg:names)" />
				</prg:switch>
			</prg:options>
		</prg:group>
		<!-- Userdata -->
		<prg:group>
			<prg:documentation>
				<prg:abstract>User data</prg:abstract>
			</prg:documentation>
			<prg:options>
				<prg:argument>
					<prg:databinding>
						<prg:variable>userInitializationScript</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>User-defined post-initialization script</prg:abstract>
						<prg:details>
							A Javascript file loaded after the main ui object initialization stage
							<prg:endl />
							If a onInitialize() function is available, it will be called with the main ui object as the first argument
							<prg:endl />
							The script is copied in the chrome/content directory and is available through the following url
							<prg:block>chrome://&lt;xulAppName&gt;/content/&lt;xulAppName&gt;-user.js
							</prg:block>
						</prg:details>
					</prg:documentation>
					<prg:names>
						<prg:long>init-script</prg:long>
						<prg:short>j</prg:short>
					</prg:names>
					<prg:type>
						<prg:path exist="true">
							<prg:kinds>
								<prg:file />
							</prg:kinds>
							<prg:patterns>
								<prg:pattern>
									<prg:name>Javascript file</prg:name>
									<prg:rules>
										<prg:rule>
											<prg:endWith>.js</prg:endWith>
										</prg:rule>
									</prg:rules>
								</prg:pattern>
							</prg:patterns>
						</prg:path>
					</prg:type>
				</prg:argument>
				<prg:multiargument>
					<prg:databinding>
						<prg:variable>userDataPaths</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Additional resources</prg:abstract>
						<prg:details>
							A list of path or file to add in the application bundle.
							<prg:endl />
							These items are copied in the chrome/userdata folder of the
							application bundle and a new
							resource url is avalailable
							(resource://userdata/...)
						</prg:details>
					</prg:documentation>
					<prg:names>
						<prg:long>resources</prg:long>
					</prg:names>
					<prg:type>
						<prg:path exist="true">
							<prg:kinds>
								<prg:file />
								<prg:folder />
							</prg:kinds>
						</prg:path>
					</prg:type>
				</prg:multiargument>
			</prg:options>
		</prg:group>
		<!-- ns path -->
		<prg:group>
			<prg:documentation>
				<prg:abstract>ns-xml options</prg:abstract>
			</prg:documentation>
			<prg:options>
				<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:argument[@id = 'nsxml.option.nsxmlPath'])" />
				<xi:include href="options.xml" xpointer="xmlns(prg=http://xsd.nore.fr/program) xpointer(//prg:switch[@id = 'nsxml.option.nsxmlRelativePath'])" />
				<prg:switch>
					<prg:databinding>
						<prg:variable>addNsXml</prg:variable>
					</prg:databinding>
					<prg:documentation>
						<prg:abstract>Add ns-xml sources into application resources</prg:abstract>
						<prg:details>Include the ns-xml library files (sh and xsl) in the XUL application bundle.</prg:details>
					</prg:documentation>
					<prg:names>
						<prg:short>n</prg:short>
						<prg:long>ns</prg:long>
						<prg:long>ns-xml-add</prg:long>
					</prg:names>
				</prg:switch>
			</prg:options>
		</prg:group>
	</prg:options>
</prg:program>
